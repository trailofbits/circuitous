#!/bin/sh

set -e

# Default values for parameters
run="@PROJECT_BINARY_DIR@/bin/run/circuitous-run"
convert_trace_type="mttn"
quiet_flag="--quiet"
use_cache=true

# Function to display usage
display_usage() {
    echo "Usage: $0 [OPTIONS] <mttn_trace>"
    echo "Options:"
    echo "  -r, --run <run_command>       Specify the run executable (default: $run)"
    echo "  -t, --convert-trace <type>    Specify the trace type (default: $convert_trace_type)"
    echo "  -q, --quiet                   Run in quiet mode"
    echo "  --no-cache                    Disable caching"
    echo "  --help                        Display this help message"
    exit 1
}

# Parse command-line options
while [ "$#" -gt 0 ]; do
    case "$1" in
        -r|--run)
            run="$2"
            shift 2
            ;;
        -t|--convert-trace)
            convert_trace_type="$2"
            shift 2
            ;;
        -q|--quiet)
            quiet_flag="--quiet"
            shift
            ;;
        --no-cache)
            use_cache=false
            shift
            ;;
        --help)
            display_usage
            ;;
        *)
            mttn_trace="$1"
            shift
            ;;
    esac
done

# Check if required argument is provided
if [ -z "$mttn_trace" ]; then
    echo "Error: Missing <mttn_trace> argument."
    display_usage
fi

# Extracting root name and file paths
circuit_root=$(basename "$mttn_trace" ".trace.txt")
circuit_v="$circuit_root.v"
circuit_c="$circuit_root.circir"
trace_out="$circuit_root.circuitous_trace"

# Check if cached files exist (if use_cache is true)
if [ "$use_cache" = true ] && [ -n "${CIRCUITOUS_VERILOG_TEST_CACHE}" ] && [ -f "$trace_out" ] && [ -f "$circuit_c" ] && [ -f "$circuit_v" ]; then
    echo "Found cached trace $trace_out"
else
    echo "Converting traces and producing circuit: $mttn_trace -> $trace_out"
    $run --convert-trace "$convert_trace_type" \
         --traces "$mttn_trace" \
         $quiet_flag \
         --construct-circuit \
         --verilog-out "$circuit_v" \
         --ir-out "$circuit_c" \
         --output "$trace_out"
fi

# Execute test harness
sh scripts/circuitous-test-harness.sh "$circuit_v" "$trace_out"
exit $?
