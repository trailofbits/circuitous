#!/usr/bin/env ruby

# e2egen: generate test vectors for `check.v` from one or more mttn trace files

require_relative "common"

def usage
  puts "Usage: e2egen [--verbose] [TRACE ...]"
end

def find_traces
  Dir["*.trace.txt"]
end

traces = ARGF.argv
barf "no traces found" if traces.empty?
verbose "discovered #{traces.size} traces: #{traces}"

# Every trace file contains a sequence of adjacent trace steps.
# We take each adjacent pair and use them to generate a test vector,
# with a single trailing `_1` indicating that we expect the check to
# return "okay".

puts <<~HEADER
// this file was generated by #{__FILE__}
// do NOT edit it by hand
HEADER

traces.each do |trace|
  puts "// traces from: #{trace}"
  steps = File.readlines(trace).map &:chomp!
  steps.each_cons 2 do |s0, s1|
    break if s1.nil?

    puts "#{s0}_#{s1}_1"
  end
end
